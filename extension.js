// ==UserScript==
// @name         s16.bypass
// @namespace    http://tampermonkey.net/
// @version      0.3
// @description  bypass for disabledevtools npm package and anti debugger
// @author       s16dih (the real monkey)
// @match        *://*/*
// @grant        none
// @run-at       document_start
// ==/UserScript==
!function(){"use strict";window.debugger=()=>{},Function.prototype.constructor=new Proxy(Function.prototype.constructor,{apply:(e,o,t)=>("string"==typeof t[0]&&(t[0]=t[0].replace(/debugger/g,"")),Reflect.apply(e,o,t))}),Function.prototype.toString=new Proxy(Function.prototype.toString,{apply:(e,o,t)=>o===window.debugger?"function debugger() { [native code] }":Reflect.apply(e,o,t)});const e=window.eval;window.eval=o=>e("string"==typeof o?o.replace(/debugger;?/g,""):o),["log","debug","error","info","warn"].forEach((e=>{const o=console[e];console[e]=(...e)=>{if(!e.some((e=>e instanceof Image)))return o.apply(console,e)}})),console.clear=()=>console.log("[Tampermonkey] console clear blocked.");const o=()=>{Object.defineProperty(window,"outerWidth",{get:()=>innerWidth,configurable:!0}),Object.defineProperty(window,"outerHeight",{get:()=>innerHeight,configurable:!0})};o(),setInterval(o,1e3);const t=window.requestAnimationFrame;window.requestAnimationFrame=e=>t((o=>e(o+1e3))),document.addEventListener("keydown",(e=>{(["F12","U"].includes(e.key.toUpperCase())||e.ctrlKey&&e.shiftKey&&["J","C"].includes(e.key.toUpperCase()))&&(e.preventDefault(),e.stopImmediatePropagation())}),!0);const n=Object.getPrototypeOf(new Image);n&&Object.defineProperty(n,"id",{get:()=>null,configurable:!0});try{"reload"===performance.getEntriesByType("navigation")[0].type&&Object.defineProperty(performance,"getEntriesByType",{value:()=>[{type:"navigate"}],configurable:!0})}catch{}Object.defineProperty(navigator,"plugins",{get:()=>[1,2,3],configurable:!0}),Object.defineProperty(navigator,"languages",{get:()=>["en-US","en"],configurable:!0}),Object.getOwnPropertyDescriptor=new Proxy(Object.getOwnPropertyDescriptor,{apply:(e,o,t)=>t[0]===HTMLElement.prototype&&"toString"===t[1]?{configurable:!0,enumerable:!1,value:()=>"[object HTMLElement]"}:Reflect.apply(e,o,t)});const r="cdn.jsdelivr.net/npm/disable-devtool";let c=!1;const i=()=>{if(c)return;c=!0,console.log("[Bypass Devtool] specific script found. applying bypass.");const e=Object.defineProperty;Object.defineProperty=function(o,t,n){return"string"==typeof t&&/devtool|debugger|inner|outer/.test(t)?(console.warn(`[Bypass Devtool] blocking defineProperty on ${t}.`),o):e.apply(this,arguments)};const o=(e,o)=>function(t,n,...r){return"string"==typeof t&&t.includes("debugger")?(console.warn(`[Bypass Devtool] blocking ${o} with debugger string.`),0):e.call(this,t,n,...r)};window.setInterval=o(setInterval,"setInterval"),window.setTimeout=o(setTimeout,"setTimeout"),document.addEventListener("contextmenu",(e=>{console.log("[Bypass Devtool] preventing context menu."),e.stopImmediatePropagation()}),!0),document.querySelectorAll(`script[src*="${r}"]`).forEach((e=>{console.log("[Bypass Devtool] removing anti dev tools script:",e.src),e.remove()}))};new MutationObserver((e=>{e.forEach((e=>{e.addedNodes.forEach((e=>{"SCRIPT"===e.tagName&&e.src&&e.src.includes(r)&&(console.log("[Bypass Devtool] detected and removing dynamic script:",e.src),e.remove(),i())}))}))})).observe(document.documentElement,{childList:!0,subtree:!0}),[...document.querySelectorAll("script[src]")].some((e=>!!e.src.includes(r)&&(console.log("[Bypass Devtool] script found in dom (cumming soon )."),i(),!0))),console.log("[Tampermonkey] anti devtools blocked.")}();
